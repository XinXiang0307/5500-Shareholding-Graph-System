---
title: 金融业与知识图谱
date: 2024-04-27
author:
  - name: Xin Xiang
    email: xx123@georgetown.edu
    affiliation: 
      - name: Georgetown University
        city: Washington
        state: DC
        url: https://www.georgetown.edu/
abstract: > 
  得写个250-500字的abstract
  简单实现了，，，，，，能够对后续进行，，，有很好的价值。
keywords:
  - Knowledge Graph
  - Risk Management

---

## Introduction

Explain your chosen topic and why it is important for your field.

在这个项目里，我选择了图数据结构，并且阐述在传统金融行业面临的困境。

通过图结构在金融行业的垂直领域进行深耕，能够挖掘出很多我们无法在普通关系性数据库发现的细节。编织出一张知识图谱，辅助金融行业的高风险管理。

## Literature Review

### 讨论知识图谱的进化发展历程（简短）

### 讨论金融系统（传统银行）里进行数据分析的复杂性和重要性（简短）

### 讨论知识图谱在金融行业的应用（重点）


## Example : Simple Shareholding Graph System

### Description



### Data source 


`person` can hold a `corp` in {share} %
`person` can be relative with another `person`
`corp` can hold another `corp` in {share} %
`corp` can be a branch of another `corp`
`person` can be as a role of a `corp`


### Code

#### Data preparation

因为原始数据集是放进图数据库直接存储，可以在图数据库中直接设置tag和edge。而我在example中需要自己实现graph类，所以需要对原始数据集进行预处理。

```{python}
import pandas as pd
# corp.csv
# define the corporation id and name to the csv file
path = './data/corp.csv'
# define the column names in corp.csv
column_names = ['Corp_id', 'Corp_name']

# load the csv into a DataFrame, and specify the column names
corp_df = pd.read_csv(path, header=None, names=column_names)

# 


```


```{python}
# Python code to illustrate the example
class Graph:
    def __init__(self):
        self.adjacency_list = {}  

    def add_vertex(self, vertex):
        if vertex not in self.adjacency_list:
            self.adjacency_list[vertex] = []

    def add_edge(self, from_vertex, to_vertex, weight=0):
        if from_vertex in self.adjacency_list:
            self.adjacency_list[from_vertex].append((to_vertex, weight))

    def remove_edge(self, from_vertex, to_vertex):
        if from_vertex in self.adjacency_list:
            self.adjacency_list[from_vertex] = [t for t in self.adjacency_list[from_vertex] if t[0] != to_vertex]

    def remove_vertex(self, vertex):
        self.adjacency_list.pop(vertex, None)
        for v in self.adjacency_list:
            self.adjacency_list[v] = [t for t in self.adjacency_list[v] if t[0] != vertex]

    def get_edges(self, vertex):
        return self.adjacency_list.get(vertex, [])

    def update_edge(self, from_vertex, to_vertex, new_weight):
        if from_vertex in self.adjacency_list:
            self.adjacency_list[from_vertex] = [(v, w if v != to_vertex else new_weight) for v, w in self.adjacency_list[from_vertex]]
```




```{python}
#| output: false


```


## Conclusion

这种图结构出来的知识图谱可以运用到金融行业里，比如说进行客户分群，精准提升金融行业

## References {.unnumbered}

::: {#refs}
:::